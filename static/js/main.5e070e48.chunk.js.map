{"version":3,"sources":["Cam.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Cam","props","onTakePhoto","dataUri","returnImg","console","log","handleTakePhoto","App","React","imgs","setImgs","displayImgs","map","imgUri","src","alt","prevImgs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAqBeA,G,MAfc,SAACC,GAM5B,OACE,cAAC,IAAD,CACEC,YAAa,SAACC,IAPlB,SAAyBA,GACvBF,EAAMG,UAAUD,GAChBE,QAAQC,IAAI,aAMRC,CAAgBJ,QCSTK,G,MApBO,WAAO,IAAD,EACFC,WAA8B,IAD5B,mBACnBC,EADmB,KACbC,EADa,KAMpBC,EAAcF,EAAKG,KAAI,SAACC,GAAD,OAC3B,6BACE,qBAAKC,IAAKD,EAAQE,IAAI,kBAI1B,OACE,gCACE,cAAC,EAAD,CAAKZ,UAZM,SAACU,GACdH,GAAQ,SAACM,GAAD,OAA8BH,GAA9B,mBAAyCG,UAY/C,6BAAKL,SCLIM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5e070e48.chunk.js","sourcesContent":["import * as React from \"react\";\nimport Camera from \"react-html5-camera-photo\";\nimport \"react-html5-camera-photo/build/css/index.css\";\ninterface Props {\n  returnImg: (imgUri: string) => void;\n}\nconst Cam: React.FC<Props> = (props) => {\n  function handleTakePhoto(dataUri: string) {\n    props.returnImg(dataUri);\n    console.log(\"takePhoto\");\n  }\n\n  return (\n    <Camera\n      onTakePhoto={(dataUri: string) => {\n        handleTakePhoto(dataUri);\n      }}\n    />\n  );\n};\n\nexport default Cam;\n","import * as React from \"react\";\nimport Cam from \"./Cam\";\nimport \"./App.css\";\n\nconst App: React.FC = () => {\n  const [imgs, setImgs] = React.useState<Array<string>>([]);\n  const addImg = (imgUri: string) => {\n    setImgs((prevImgs: Array<string>) => [imgUri, ...prevImgs]);\n  };\n\n  const displayImgs = imgs.map((imgUri) => (\n    <li>\n      <img src={imgUri} alt=\"Cool img\" />\n    </li>\n  ));\n\n  return (\n    <div>\n      <Cam returnImg={addImg} />\n      <ul>{displayImgs}</ul>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}